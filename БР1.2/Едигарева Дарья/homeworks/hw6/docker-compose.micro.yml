services:
  db:
    image: postgres:17
    container_name: backend_hw2_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - '5432:5432'
    volumes:
      - data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: message_broker
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - rabbit-data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 10s
      timeout: 10s
      retries: 6

  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: auth_service
    environment:
      NODE_ENV: production
      APP_HOST: 0.0.0.0
      APP_PORT: 8001
      APP_PROTOCOL: http
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: postgres
      JWT_SECRET_KEY: secret
      MESSAGE_BROKER_URL: amqp://rabbitmq:5672
    depends_on:
      db:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    expose:
      - '8001'

  vacancies-service:
    build:
      context: ./services/vacancies-service
      dockerfile: Dockerfile
    container_name: vacancies_service
    environment:
      NODE_ENV: production
      APP_HOST: 0.0.0.0
      APP_PORT: 8002
      APP_PROTOCOL: http
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: postgres
      JWT_SECRET_KEY: secret
      MESSAGE_BROKER_URL: amqp://rabbitmq:5672
    depends_on:
      db:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    expose:
      - '8002'

  profiles-service:
    build:
      context: ./services/profiles-service
      dockerfile: Dockerfile
    container_name: profiles_service
    environment:
      NODE_ENV: production
      APP_HOST: 0.0.0.0
      APP_PORT: 8003
      APP_PROTOCOL: http
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: postgres
      JWT_SECRET_KEY: secret
      MESSAGE_BROKER_URL: amqp://rabbitmq:5672
    depends_on:
      db:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    expose:
      - '8003'

  gateway:
    image: nginx:alpine
    container_name: api_gateway
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - auth-service
      - vacancies-service
      - profiles-service
    ports:
      - '8000:80'

volumes:
  data:
  rabbit-data:
